buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

sourceSets {
  main{
    java{
	srcDirs = ['../../../../src/main/java']
	include '**/'+serviceName+'/**/*'
	include '**/common/**/*'
    }
    resources {
        srcDirs = ['../../../../src/main/resources/'+serviceName]
    }
  }
}

jar {
    baseName = serviceName
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencyManagement {
	imports {
		mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Camden.SR6'
	}
}

dependencies {

  compile('org.springframework.cloud:spring-cloud-starter-eureka')
  compile('org.springframework.boot:spring-boot-starter-web')
  testCompile('org.springframework.boot:spring-boot-starter-test')

  // JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
   compile 'org.springframework.boot:spring-boot-starter-data-jpa'

   // Use MySQL Connector-J
   compile 'mysql:mysql-connector-java'

}
eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}
